{"ast":null,"code":"var _jsxFileName = \"/Users/nahruskii24/Desktop - Nathaniel\\u2019s MacBook Pro/development/framer-clone/src/components/toolbox.tsx\";\n// src/components/editor/toolbar.tsx\nimport React from 'react';\nimport DraggableElement from './draggable-elements'; // Assuming DraggableElement is defined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbox = ({\n  elements\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    width: '200px',\n    border: '1px solid #ddd',\n    padding: '10px',\n    marginBottom: '20px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Toolbox\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), elements.map((element, index) => /*#__PURE__*/_jsxDEV(DraggableElement, {\n    type: element.type,\n    children: element.content\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c = Toolbox;\nexport default Toolbox;\nvar _c;\n$RefreshReg$(_c, \"Toolbox\");","map":{"version":3,"names":["React","DraggableElement","jsxDEV","_jsxDEV","Toolbox","elements","style","width","border","padding","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","index","type","content","_c","$RefreshReg$"],"sources":["/Users/nahruskii24/Desktop - Nathanielâ€™s MacBook Pro/development/framer-clone/src/components/toolbox.tsx"],"sourcesContent":["// src/components/editor/toolbar.tsx\nimport React from 'react';\nimport DraggableElement from './draggable-elements'; // Assuming DraggableElement is defined\n\ninterface ToolboxProps {\n  elements: { type: string; content: React.ReactNode }[]; // Draggable elements to render in the toolbox\n}\n\nconst Toolbox: React.FC<ToolboxProps> = ({ elements }) => (\n  <div style={{ width: '200px', border: '1px solid #ddd', padding: '10px', marginBottom: '20px' }}>\n    <h3>Toolbox</h3>\n    {elements.map((element, index) => (\n      <DraggableElement key={index} type={element.type}>\n        {element.content}\n      </DraggableElement>\n    ))}\n  </div>\n);\n\nexport default Toolbox;\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMrD,MAAMC,OAA+B,GAAGA,CAAC;EAAEC;AAAS,CAAC,kBACnDF,OAAA;EAAKG,KAAK,EAAE;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE,gBAAgB;IAAEC,OAAO,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAO,CAAE;EAAAC,QAAA,gBAC9FR,OAAA;IAAAQ,QAAA,EAAI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,EACfV,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bf,OAAA,CAACF,gBAAgB;IAAakB,IAAI,EAAEF,OAAO,CAACE,IAAK;IAAAR,QAAA,EAC9CM,OAAO,CAACG;EAAO,GADKF,KAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CACnB,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;AAACM,EAAA,GATIjB,OAA+B;AAWrC,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}