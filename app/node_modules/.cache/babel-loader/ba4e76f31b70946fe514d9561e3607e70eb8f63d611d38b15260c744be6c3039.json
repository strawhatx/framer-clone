{"ast":null,"code":"var _jsxFileName = \"/Users/nahruskii24/Desktop - Nathaniel\\u2019s MacBook Pro/development/framer-clone/src/components/draggable-element.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableElement = ({\n  children,\n  type\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: type,\n    // Specify the type of the draggable item\n    item: {\n      type: 'TOOLBOX_ITEM'\n    },\n    // Specify the type of the item being dragged\n    collect: monitor => ({\n      // Specify the type of monitor as DragSourceMonitor\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'move'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableElement, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = DraggableElement;\nexport default DraggableElement;\nvar _c;\n$RefreshReg$(_c, \"DraggableElement\");","map":{"version":3,"names":["React","useDrag","jsxDEV","_jsxDEV","DraggableElement","children","type","_s","isDragging","drag","item","collect","monitor","ref","style","opacity","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nahruskii24/Desktop - Nathanielâ€™s MacBook Pro/development/framer-clone/src/components/draggable-element.tsx"],"sourcesContent":["import React from 'react';\nimport { useDrag, DragSourceMonitor } from 'react-dnd';\n\ninterface DraggableElementProps {\n  type: string;\n  children: React.ReactNode; // Element content\n}\n\nconst DraggableElement: React.FC<DraggableElementProps> = ({ children, type }) => {\n  const [{ isDragging }, drag] = useDrag({\n    type: type, // Specify the type of the draggable item\n    item: { type: 'TOOLBOX_ITEM' }, // Specify the type of the item being dragged\n    collect: (monitor: DragSourceMonitor) => ({ // Specify the type of monitor as DragSourceMonitor\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        cursor: 'move',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default DraggableElement;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAA2B,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvD,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAAC;IAAEC;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGR,OAAO,CAAC;IACrCK,IAAI,EAAEA,IAAI;IAAE;IACZI,IAAI,EAAE;MAAEJ,IAAI,EAAE;IAAe,CAAC;IAAE;IAChCK,OAAO,EAAGC,OAA0B,KAAM;MAAE;MAC1CJ,UAAU,EAAE,CAAC,CAACI,OAAO,CAACJ,UAAU,CAAC;IACnC,CAAC;EACH,CAAC,CAAC;EAEF,oBACEL,OAAA;IACEU,GAAG,EAAEJ,IAAK;IACVK,KAAK,EAAE;MACLC,OAAO,EAAEP,UAAU,GAAG,GAAG,GAAG,CAAC;MAC7BQ,MAAM,EAAE;IACV,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACb,EAAA,CApBIH,gBAAiD;EAAA,QACtBH,OAAO;AAAA;AAAAoB,EAAA,GADlCjB,gBAAiD;AAsBvD,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}