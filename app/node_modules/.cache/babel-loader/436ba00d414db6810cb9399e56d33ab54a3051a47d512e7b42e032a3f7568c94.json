{"ast":null,"code":"var _jsxFileName = \"/Users/nahruskii24/Desktop - Nathaniel\\u2019s MacBook Pro/development/framer-clone/src/pages/editor.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport EditorCanvas from '../components/editor-canvas';\nimport Toolbox from '../components/toolbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Define toolbox items\n  const toolboxItems = [{\n    type: 'BUTTON',\n    content: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 32\n    }, this)\n  }, {\n    type: 'IMAGE',\n    content: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"image.png\",\n      alt: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 31\n    }, this)\n  }\n  // Add more toolbox items as needed\n  ];\n\n  // Define state for elements on the canvas\n  const [canvasElements, setCanvasElements] = React.useState([]);\n\n  // Define drop handler for the canvas\n  const handleDrop = type => {\n    // Generate a unique id for the dropped element\n    const id = Math.random().toString(36).substr(2, 9);\n    // Add the dropped element to the canvas elements state\n    setCanvasElements([...canvasElements, {\n      id,\n      type\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbox, {\n        items: toolboxItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditorCanvas, {\n        elements: canvasElements,\n        onDrop: handleDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Q7q3CJ9ewWO2NuZkQFO9s+1KPpA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","EditorCanvas","Toolbox","jsxDEV","_jsxDEV","App","_s","toolboxItems","type","content","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","canvasElements","setCanvasElements","useState","handleDrop","id","Math","random","toString","substr","style","display","items","elements","onDrop","_c","$RefreshReg$"],"sources":["/Users/nahruskii24/Desktop - Nathanielâ€™s MacBook Pro/development/framer-clone/src/pages/editor.tsx"],"sourcesContent":["import React from 'react';\nimport EditorCanvas from '../components/editor-canvas';\nimport Toolbox from '../components/toolbox';\n\ninterface CanvasElement {\n  id: string;\n  type: string;\n  // Add more properties as needed\n}\n\nconst App: React.FC = () => {\n  // Define toolbox items\n  const toolboxItems = [\n    { type: 'BUTTON', content: <button>Button</button> },\n    { type: 'IMAGE', content: <img src=\"image.png\" alt=\"Image\" /> },\n    // Add more toolbox items as needed\n  ];\n\n  // Define state for elements on the canvas\n  const [canvasElements, setCanvasElements] = React.useState<CanvasElement[]>([]);\n\n  // Define drop handler for the canvas\n  const handleDrop = (type: string) => {\n    // Generate a unique id for the dropped element\n    const id = Math.random().toString(36).substr(2, 9);\n    // Add the dropped element to the canvas elements state\n    setCanvasElements([...canvasElements, { id, type }]);\n  };\n\n  return (\n    <div>\n      <h1>Page Builder</h1>\n      <div style={{ display: 'flex' }}>\n        <Toolbox items={toolboxItems} />\n        <EditorCanvas elements={canvasElements} onDrop={handleDrop} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,YAAY,GAAG,CACnB;IAAEC,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEL,OAAA;MAAAM,QAAA,EAAQ;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAE,CAAC,EACpD;IAAEN,IAAI,EAAE,OAAO;IAAEC,OAAO,eAAEL,OAAA;MAAKW,GAAG,EAAC,WAAW;MAACC,GAAG,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;EAC9D;EAAA,CACD;;EAED;EACA,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAkB,EAAE,CAAC;;EAE/E;EACA,MAAMC,UAAU,GAAIZ,IAAY,IAAK;IACnC;IACA,MAAMa,EAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD;IACAP,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE;MAAEI,EAAE;MAAEb;IAAK,CAAC,CAAC,CAAC;EACtD,CAAC;EAED,oBACEJ,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBV,OAAA;MAAKsB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAjB,QAAA,gBAC9BN,OAAA,CAACF,OAAO;QAAC0B,KAAK,EAAErB;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCV,OAAA,CAACH,YAAY;QAAC4B,QAAQ,EAAEZ,cAAe;QAACa,MAAM,EAAEV;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CA5BID,GAAa;AAAA0B,EAAA,GAAb1B,GAAa;AA8BnB,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}